1. Two Sum

Given an array of integers nums and an integer target, return indices of the two numbers such that they add up to target.

You may assume that each input would have exactly one solution, and you may not use the same element twice.

You can return the answer in any order.

 

Example 1:

Input: nums = [2,7,11,15], target = 9
Output: [0,1]
Explanation: Because nums[0] + nums[1] == 9, we return [0, 1].
Example 2:

Input: nums = [3,2,4], target = 6
Output: [1,2]
Example 3:

Input: nums = [3,3], target = 6
Output: [0,1]
 

Constraints:

2 <= nums.length <= 104
-109 <= nums[i] <= 109
-109 <= target <= 109
Only one valid answer exists.



SOLUTIONS:

1) Используем itertools
import itertools

class Solution:
    def twoSum(self, nums: List[int], target: int) -> List[int]:
        combinations = itertools.combinations(nums, 2)
        for comb in combinations:
            if comb[0] + comb[1] == target:
                ind1 = nums.index(comb[0])
                nums[ind1] = None
                return [ind1, nums.index(comb[1])]

2864 ms
17.1 MB


2) Хэш-таблица
class Solution:
    def twoSum(self, nums: List[int], target: int) -> List[int]:
        hashmap = {}
        for i in range(len(nums)):
            complement = target - nums[i]
            if complement in hashmap:
                return [i, hashmap[complement]]
            hashmap[nums[i]] = i

54 ms
17.7 MB
